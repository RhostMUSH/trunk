@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@                                                                          @@
@@                NO EDITING OF THIS FILE IS NECESSARY                      @@
@@                                                                          @@
@@                                                                          @@
@@  Just copy-paste this file directly to your game, it will create the     @@
@@  necessary objects for you and modify all referenced dbref's in the      @@
@@  code.                                                                   @@
@@                                                                          @@
@@                      Rockpath's Job System V 2.1.2                       @@
@@     Jobs System has been upgraded to allow for different staff tiers.    @@
@@     +request/cancel has been created to allow for user-side deletion.    @@
@@                  Use +jobs/help to see the help file                     @@
@@                         Some bugs were squashed.                         @@
@@  Instructions should appear at the bottom when you finish installation.  @@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@pemit me=[repeat(=,78)]%r[center(Constructing Rockpath's Job System v 2.1.2,78)]%r[repeat(-,78)]%rPlease wait...%r

@pemit me=Setting the SIDEFX flag on yourself to build this.  Unset it when done (@set me=!sidefx)
@set me=sidefx
 
@eval [setq(0, [create(Rockpath's Jobs System)])][setq(1, [create(Rockpath's Job Database)])][set(%q0, database:%q1)][set(%q1, system:%q0)]
 
@@ Setting self quiet so that you aren't spammed...
@set me=quiet

@lock Rockpath's Jobs System=me

@Desc Rockpath's Jobs System=[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, Rockpath's Jobs System Help)] >)]%r[u([v(database)]/fn`formathelp, {+job/create Category/Topic=Contents - Create a new job. Categories are: [elist([get([v(database)]/list`categories)],,,,,[ansi(y, %0)])]%r+jobs - Look at all the jobs%r+job <#> - Look at the details of a job.%r+jobs/reorder - Reorganize the jobs. Known as 'compress'%r+job/delete <#> - Delete a job. There will be some records created%r+job/approve #=<comment> - Approve a job. If you don't want to add a comment, then leave it blank. But keep the = sign.%r+job/deny <#>=<comment> - Deny a job. If you don't want to add a comment, then leave it blank. But keep the = sign.%r+job/complete <#>=<comment> - Complete a job. If you don't want to add a comment, then leave it blank. But keep the = sign.%r+job/status <#>=<new|underway|hold|done|25|50|75|100> - Set the progress of the job%r+job/comment <#>=<comment> - Comment on a job. This is simply appended to the job description.%r+job/cat <#>=<Category> - Move the job from one Category to another. Tier is not chnanged automatically.%r+job/urgency <#>=<1-4|red|yellow|green> - Set the urgency of a job.%r+job/rename <#>=<New Name> - Rename a job. It does /not/ change the Number of a job.%r+job/claim <#> - Claim a job for yourself.%r+job/assign <#>=<Staff Member> - Assign a job to another person. This command will alert other Staff.%r+jobs/mine - List jobs assigned to you.%r+job/tier <#>=[!]<Tier> - Set a job to Tier-level access. Placing a ! in front of the tier removes its access (be sure to always leave at least one level of access.)})]%r[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Help)] >)]

&CMD`ADD Rockpath's Jobs System=$+job/create */*=*:@break [u([v(database)]/bool`is-staff)]={@break [t([match([get([v(database)]/list`categories)], %0)])]={@eval [u([v(database)]/fn`create-job, %0, %1, %2)];@pemit %#=[u([v(database)]/fn`prompt, req)] You have created a new Job under the [ansi(y, [ucstr(%0)])] category.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] Invalid Category. Please choose from [elist([get([v(database)]/list`categories)], or)].};@pemit %#=[error()]

&CMD`VIEW-ALL Rockpath's Jobs System=$+jobs:@break [u([v(database)]/bool`is-staff)]={@pemit %#={[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, [mudname() Jobs])] >)]%r[ansi(c, [printf($3^s $6-s $12-s $25-s $6-s $12-s $8^s, #, Type, Requester, Job Title, Start, Handler, Status)])]%r[repeat(-, 78)]};@skip/ifelse [t([lcon([v(database)]/object)])]={@eval [iter([revwords([lcon([v(database)]/object)])], [if([lor([iter([get(%i0/tier)], [u([v(database)]/tier`%i0, %#)])])], [pemit(%#, [ansi([switch([get(##/urgency)], 1, hg, 2, hy, 3, hr, n)], [printf($3^s $6-s $12-s $25-s $6-s $12-s $8s, [after([name(##)], %b)], [get(##/category)], [name([get(##/requester)])], [get(##/JName)], [if([hasattr(##/started)], [timefmt($02M/$02D, [get(##/started)])], --------)], [if([hasattr(##, handler)], [name([get(##/handler)])], -----)], [get(##/status)])])])])])]};@pemit %#={[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Jobs)] >)]}};@pemit %#=[error()]

&CMD`VIEW-JOB Rockpath's Jobs System=$+job *:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [u([v(database)]/fn`showjob, %qj)]}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to look at that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid number.};@pemit %#={[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Jobs)] >)]}};@pemit %#=[error()]

&CMD`REORDER Rockpath's Jobs System=$+jobs/reorder:@skip/ifelse [strmatch(%#, [owner(me)])]={@cemit staff={[u([v(database)]/fn`prompt, jobs)] The jobs were reordered.};@eval [set([v(database)], count:1)][iter([revwords([lcon([v(database)]/object)])], [name(##, Job [get([v(database)]/count)])][set([v(database)], count:[inc([get([v(database)]/count)])])])][pemit(%#, [u([v(database)]/fn`prompt, jobs)] You have reordered all the jobs!)]}, @pemit %#=[error()]

&CMD`URGENT Rockpath's Jobs System=$+job/urgency *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [u([v(database)]/fn`urgent,%qj,%1)]}, @pemit %#=[u([v(database)]/fn`prompt, Jobs)] You don't have permission to look at that job.}; @pemit %#=[u([v(database)]/fn`prompt, Jobs)] You must specify a valid Job.};@pemit %#={[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Jobs)] >)]}};@pemit %#=[error()]

&CMD`COMPLETE Rockpath's Jobs System=$+job/complete *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [u([v(database)]/fn`complete-job, %qj, %1)]}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to look at that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.}; @pemit %#=[error()]

&CMD`APPROVE Rockpath's Jobs System=$+job/approve *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [u([v(database)]/fn`approve-job, %qj, %1)]}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to look at that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`DENY Rockpath's Jobs System=$+job/deny *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [u([v(database)]/fn`deny-job, %qj, %1)]}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to look at that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`DELETE Rockpath's Jobs System=$+job/delete *:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [u([v(database)]/fn`del-job, %qj)]}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to look at that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`COMMENT Rockpath's Jobs System=$+job/comment *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(J, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qJ/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [set(%qJ, desc:[strcat([get(%qJ/desc)], %r%r[name(%#)] %[[timefmt($M/$D/$Y $H:$02T$p, [secs()])]%]: %1)])][mailsend([listdiff([get(%qJ/requester)] [if([t([get(%qJ/handler)])], [get(%qJ/handler)])], %#)], [name(%qJ)] %([get(%qJ/jname)]%), [name(%#)] %[[timefmt($M/$D/$Y $H:$02T$p, [secs()])]%]: %1)]; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You have commented on [name(%qJ)].}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to look at that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`CLAIM Rockpath's Jobs System=$+job/claim *:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [set(%qj, handler:%#)];@pemit %#=[u([v(database)]/fn`prompt, jobs)] You have claimed [name(%qj)].; @pemit/list [listdiff([iter([get(%qj/tier)], [u([v(database)]/tier-grab`##)])], %#)]=[u([v(database)]/fn`prompt, jobs)] [cname(%#)] has claimed [name(%qj)].}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to change that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`ASSIGN Rockpath's Jobs System=$+job/assign *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@break [and([t([setr(+, [pmatch(%1)], handler)])], [u([v(database)]/bool`is-staff, %q<handler>)])]={@break [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %q<handler>)])])])]={@eval [set(%qj, handler:%q<handler>)]; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You have set [name(%qj)]'s Handler to [cname(%q<handler>)].; @pemit %q<handler>=[u([v(database)]/fn`prompt, jobs)] You have been assigned [name(%qj)]; @pemit [listdiff([iter([get(%qj/tier)], [u([v(database)]/tier-grab`##)])], %q<handler> %#)]}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] [cname(%q<handler>)] cannot access that Job. Please set the job to the appropriate Tier first.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] Pick a valid Staff Member}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to change that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`RENAME Rockpath's Jobs System=$+job/rename *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@eval [set(%qj, JName:%1)];@pemit %#=[u([v(database)]/fn`prompt, Jobs)] You have set [name(%qj)]'s Job Name to '%1'.}, @pemit %#=[u([v(database)]/fn`prompt, Jobs)] You don't have permission to change that job.}; @pemit %#=[u([v(database)]/fn`prompt, Jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`MYJOBS Rockpath's Jobs System=$+jobs/mine:@assert [u([v(database)]/bool`is-staff)]={@pemit %#=[error()]}; @pemit %#=[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, [mudname()] Jobs)] >)]%r[ansi(c, [printf($3^s $6-s $12-s $25-s $6-s $12-s $8s, #, Type, Requester, Job Title, Start, Handler, Status)])]%r[repeat(-, 78)]; @eval [iter([revwords([lcon([v(database)]/object)])], [ifelse([and([hasattr(##, handler)], [strmatch(%#, [get(##/handler)])])], [pemit(%#, [ansi([switch([get(##/urgency)], 1, hg, 2, hy, 3, hr, n)], [printf($3^s $6-s $12-s $25-s $6-s $12-s $8s, [after([name(##)], %b)], [get(##/category)], [name([get(##/requester)])], [get(##/JName)], [if([hasattr(##/started)], [timefmt($02M/$02D, [get(##/started)])], --------)], [if([hasattr(##, handler)], [name([get(##/handler)])], -----)], [get(##/status)])])])])])]; @pemit %#=[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Jobs)] >)]

&CMD`CATEGORIZE Rockpath's Jobs System=$+job/cat *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@break [t([match([u([v(database)]/list`categories)], %1)])]={@eval [set(%qj, category:[ucstr(%1)])][pemit(%#, [u([v(database)]/fn`prompt, jobs)] You have changed the category of [name(%qj)] to [ucstr(%1)].)]}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] Please choose a proper category: [elist([get([v(database)]/list`categories)],or,,,,[ansi(y, %0)])]}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to change that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&REQ-HELP Rockpath's Jobs System=[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, Request System Help)] >)]%r[u([v(database)]/fn`formathelp,{+request - Start going through a +request.%r+request/create <Category>/<Topic>=<Contents> - Create a new request. The categories are: [elist([get([v(database)]/list`categories)],or,,,,[ansi(y, %0)])]%r+requests - Look at all the requests you've made.%r+request <#> - Look at the details of a request.%r+request/comment <#>=<comment> - Comment on a request..%r+request/cancel <#> - Cancel one of your requests.})]%r[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Help)] >)]

&CMD`REQ-ADD Rockpath's Jobs System=$+request/create */*=*:@break [t([match([get([v(database)]/list`categories)], %0)])]={@eval [u([v(database)]/fn`create-job, %0, %1, %2)];@pemit %#=[u([v(database)]/fn`prompt, req)] You have created a new Request under the [ansi(y, [ucstr(%0)])] category.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] Invalid Category. Please choose from [elist([get([v(database)]/list`categories)], or)].

&CMD`VIEW-ALL-REQ Rockpath's Jobs System=$+requests:@pemit %#={[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, [mudname()] Jobs)] >)]%r[ansi(c, [printf($7^s $8-s $25-s $8-s $15-s $8^s, Req #, Category, Request Title, Started, Handler, Status)])]%r[repeat(-, 78)]}; @pemit %#={[iter([revwords([lcon([v(database)]/object)])], [if([strmatch(%#, [get(##/requester)])], [pemit(%#, [printf($7^s $8-s $25-s $8-s $15-s $8^s, [edit([name(##)], Job, Req)], [get(##/category)], [get(##/JName)], [if([hasattr(##/started)], [timefmt($02M/$02D/$y, [get(##/started)])], --------)], [if([hasattr(##, handler)], [name([get(##/handler)])], -----)], [ansi([switch([get(##/urgency)], 1, hg, 2, hy, 3, hr, n)], [get(##/status)])])])])])]}; @pemit %#={[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Jobs)] >)]}

&CMD`VIEW-REQ Rockpath's Jobs System=$+request *:@skip/ifelse [t([setr(0, [u([v(database)]/fn`get-job, %0)])])]={@break [strmatch(%#, [get(%q0/requester)])]={@eval [u([v(database)]/fn`showjob, %q0)]}; @pemit %#=[u([v(database)]/fn`prompt, Req)] That request isn't yours.}, @pemit %#=[u([v(database)]/fn`prompt, Req)] Invalid Request.

&CMD`REQ-COMMENT Rockpath's Jobs System=$+request/comment *=*:@skip/ifelse [strmatch(%#, [get([u([v(database)]/fn`get-job, %0)]/requester)])]={[setq(0, [u([v(database)]/fn`get-job, %0)])][switch(0, [isint(%0)], [pemit(%#, [u([v(database)]/fn`prompt, jobs)] Request must be a number!)], [t(%q0)], [pemit(%#, [u([v(database)]/fn`prompt, jobs)] No such request!)], [pemit(%#, [u([v(database)]/fn`prompt, Jobs)] You have commented on [edit([name(%q0)], Job, Request)].)][set(%q0, desc:[strcat([get(%q0/desc)], %r%r[name(%#)] %[[timefmt($M/$D/$Y $H:$02T$p, [secs()])]%]: %1)])])]}, [pemit(%#, [u([v(database)]/fn`prompt, game)] You don't have permission to do that.)]

&CMD`CANCEL Rockpath's Jobs System=$+request/cancel *:@skip/ifelse [t([setr(0, [u([v(database)]/fn`get-job, %0)])])]={@break [strmatch([get(%q0/requester)], %#)]={@eval [u([v(database)]/fn`cancel-request, %q0)]}; @pemit %#=[u([v(database)]/fn`prompt, req)] Please choose one of your own requests.}, @pemit %#=[u([v(database)]/fn`prompt, Req)] Please choose a valid +Request.

&CMD`TIER Rockpath's Jobs System=$+job/tier *=*:@break [u([v(database)]/bool`is-staff)]={@break [t([setr(j, [u([v(database)]/fn`get-job, %0)])])]={@skip/ifelse [t([lor([iter([get(%qj/tier)], [u([v(database)]/tier`##, %#)])])])]={@break [t([land([iter(%1, [if([strmatch(##, !*)], [hasattr([v(database)], tier`[after(##, !)])], [hasattr([v(database)], tier`##)])])])])]={@eval [iter(ucstr(%1),if(strmatch(##,!*),[setq(blah,[r(blah)] [after(##,!)])], [setq(test,[r(test)] ##)]))][set(%qj, tier:[setunion([setdiff([get(%qj/tier)], [r(blah)])], [r(test)])])];@pemit %#=[u([v(database)]/fn`prompt, jobs)] You have set the tier of [name(%qj)] to '[get(%qj/tier)]'.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] Please choose a valid tier: [elist([lattr([v(database)]/tier`*)],,,,,[ansi(hy, [after(%0, `)])])].}, @pemit %#=[u([v(database)]/fn`prompt, jobs)] You don't have permission to change that job.}; @pemit %#=[u([v(database)]/fn`prompt, jobs)] You must specify a valid Job.};@pemit %#=[error()]

&CMD`HELP Rockpath's Jobs System=$+jobs/help:@skip/ifelse [u([v(database)]/bool`is-staff)]={[pemit(%#, [u(desc)])]}, [pemit(%#, [error()])]

&CMD`REQ-HELP Rockpath's Jobs System=$+request/help:@eval [pemit(%#, [u(me/req-help)])]

@set Rockpath's Jobs System=INHERIT SIDEFX

@toggle Rockpath's Jobs System=PENN_MAIL

@@ Job Database Section @@

&COUNT Rockpath's Job Database=1

&FN`GET-JOB Rockpath's Job Database=[num(Job %0)]

&FN`SHOWJOB Rockpath's Job Database=[pemit(%#, [printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, [name(%0)])] >)])][pemit(%#, [printf($50-s $25-s, [ansi(hc, Job Title)]: [get(%0/jname)], [ansi(hc, Requester)]: [name([get(%0/requester)])])]%r[printf($25-s $25-s $25-s, [ansi(hc, Category)]: [get(%0/category)],, [ansi(hc, Status)]: [switch([get(%0/urgency)], 1, Green, 2, Yellow, 3, Red)] %([get(%0/status)]%))]%r[printf($50-s $25-s, [ansi(hc, Created)]: [createtime(%0)], [ansi(hc, Handler)]: [if([hasattr(%0, handler)], [name([get(%0/handler)])], -----)])])][pemit(%#, [repeat([ansi(hb, -)], 78)])][pemit(%#, [get(%0/describe)])][pemit(%#, [printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Job)] >)])]

&FN`MAIL Rockpath's Job Database=@trigger tr`mail=%0

@Startup Rockpath's Job Database=@trigger me/tr`urgency

&TR`URGENCY Rockpath's Job Database=@wait 1={th [setq(z, [secs()])][iter([lcon(me/object)], [setq(y, [sub(%qz, [get(##/started)])])][switch(1, [!hasattr(##/started)], [set(##, urgency:4)], [eq([get(##/urgency)], 3)],, [eq([get(##/urgency)], 4)], , [lte(604800, %qy)], [set(##, urgency:3)], [lte(432000, %qy)], [set(##, urgency:2)])])]}

&REQ-HELP Rockpath's Job Database=[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, Request System Help)] >)]%r[u([v(database)]/fn`formathelp, {+request/create Category/Topic=Contents - Create a new request.%r+requests - Look at all the requests you've made.%r+request <#> - Look at the details of a request.%r+request/comment <#>=<comment> - Comment on a request. This is simply appended to the request description.})]%r[printf($^78:[ansi(hb, -=)]:s, < [ansi(hw, End Help)] >)]

&LIST`CATEGORIES Rockpath's Job Database=ADMIN APP BUILD CG CODE FORUM BUG PITCH TYPO PLOT THEME QUERY NONE

&FN`DEL-JOB Rockpath's Job Database=[mailsend([get(%0/requester)], Del: [name(%0)], [cname(%#)] has deleted your request. A copy has been attached.%r%r[get(%0/describe)])][pemit(%#, [u([v(database)]/fn`prompt, Jobs)] You have deleted [ansi(hy, [name(%0)])].)][destroy(%0)]

&FN`APPROVE-JOB Rockpath's Job Database=[mailsend([get(%0/requester)], App: [name(%q0)],[cname(%#)] has approved your request. A copy has been attached.%r%r[get(%0/describe)]%r[repeat(-, 78)]%rComments from [cname(%#)]: %1)][pemit(%#, [u([v(database)]/fn`prompt, Jobs)] You have approved [ansi(hy, [name(%0)])].)][destroy(%0)]

&FN`DENY-JOB Rockpath's Job Database=[mailsend([get(%0/requester)], Den: [name(%0)],[cname(%#)] has denied your request. A copy has been attached.%r%r[get(%0/describe)]%r[repeat(-, 78)]%rComments from [cname(%#)]: %1)][pemit(%#, [u([v(database)]/fn`prompt, Jobs)] You have denied [ansi(hy, [name(%0)])].)][destroy(%0)]

&FN`COMPLETE-JOB Rockpath's Job Database=[mailsend([get(%0/requester)], Com: [name(%0)],[cname(%#)] has completed your request. A copy has been attached.%r%r[get(%0/describe)]%r[repeat(-, 78)]%rComments from [cname(%#)]: %1)][pemit(%#, [u([v(database)]/fn`prompt, Jobs)] You have completed [ansi(hy, [name(%0)])])][destroy(%0)]

&FN`STATUS Rockpath's Job Database=[set(%0, status:[switch(%1, new, NEW, underway, UNWY, done, DONE, complete, DONE, 50, 1/2 Done, 25, 1/4 Done, 75, 3/4 Done, 100, DONE, on hold, HOLD, hold, HOLD, ---)])][pemit(%#, [u([v(database)]/fn`prompt, Jobs)] You have set [name(%0)]'s status as '[get(%0/status)]'.)]

&FN`URGENT Rockpath's Job Database=[set(%0, urgency:[setr(3, [switch(%1, 1, 1, 2, 2, 3, 3, green, 1, yellow, 2, red, 3, 4)])])][pemit(%#, [u([v(database)]/fn`prompt, Jobs)] You have set [name(%0)]'s urgency as 'Level %q3'.)])]

&FN`CANCEL-REQUEST Rockpath's Job Database=[mailsend([get(%0/requester)], Canceled: [name(%0)], You have canceled your request. A copy has been attached.%r%r[get(%0/describe)])][pemit([listunion([iter([get(%0/tier)], [u(tier-grab`##)])], )], [u([v(database)]/fn`prompt, Jobs)] [ansi(m, %N)] (%#) has canceled [ansi(hy, [name(%0)])].)][destroy(%0)]

&fn`formathelp Rockpath's Job Database=[regeditalli(%0,(%\+((%\w)+(/(%\w)+)?)),[ansi(hg,$1)],(<(.*?)>),[ansi(hr,$1)],(=),[ansi(hc,$1)], %{,,%},)]

&BOOL`IS-STAFF Rockpath's Job Database=[lor([iter([lattr(me/tier`*)], [u(##, %#)])])]

&FN`CREATE-JOB Rockpath's Job Database=[setq(0, [create(Job [v(count)])])][set(me, count:[inc([v(count)])])][set(%q0, requester:%#)][tel(%q0, me)][set(%q0, JName:%1)][set(%q0, Category:[ucstr(%0)])][set(%q0, describe:%2)][set(%q0, status:NEW)][set(%q0, Urgency:1)][set(%q0, started:[secs()])][set(%q0, tier:[u(dat`initial-tier)])][pemit([listunion([iter([get(%q0/tier)], [u(tier-grab`##)])],)], [u([v(database)]/fn`prompt, Jobs)] [ansi(c, %N)] has added [name(%q0)] under the [ansi(y, [ucstr(%0)])] topic.)]

&DAT`INITIAL-TIER Rockpath's Job Database=1 [switch([get(%q0/category)], BUILD, BUILDER)]

&TIER-GRAB`1 Rockpath's Job Database=search(eplayer=u(tier`1, ##))
&TIER`1 Rockpath's Job Database=[gte([bittype(%0)], 5)]
&TIER-GRAB`BUILDER Rockpath's Job Database=search(eplayer=u(tier`builder, ##))
&TIER`BUILDER Rockpath's Job Database=[hasflag(%0, architect)]

@set Rockpath's Job Database=INHERIT SIDEFX

&CREDIT Rockpath's Job Database=Inspiration taken from Anomaly Jobs. This setup-file was based off of Myrddin's BBoard Setup File. The code above is all my own doing.
 
&FN`PROMPT Rockpath's Job Database=[switch(%0, jobs, [ansi(hc, JOBS)], game, [ansi(hm, GAME)])]:
 
&Last_Update Rockpath's Job Database=Nov 11, 2020
 
@set Rockpath's Job Database=INHERIT SIDEFX
 
@set me=!quiet
 
@wait 1=@pemit me=%rRockpath's Jobs System construction complete. It is suggested that you create a Jobs_System character with Immortal permissions so that mails don't look like they come from a single staffer.%r[repeat(=,78)]
